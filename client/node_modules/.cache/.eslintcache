[{"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\index.js":"1","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\App.js":"2","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\pages\\SearchBooks.js":"3","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\pages\\SavedBooks.js":"4","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\auth.js":"8","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\API.js":"9","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\mutations.js":"11","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\queries.js":"12","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\index.js":"13","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\App.js":"14","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\pages\\SearchBooks.js":"15","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\pages\\SavedBooks.js":"16","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\Navbar.js":"17","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\SignupForm.js":"18","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\LoginForm.js":"19","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\localStorage.js":"20","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\API.js":"21","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\mutations.js":"22","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\auth.js":"23","C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\queries.js":"24"},{"size":278,"mtime":1646194918791,"results":"25","hashOfConfig":"26"},{"size":1222,"mtime":1646510672770,"results":"27","hashOfConfig":"26"},{"size":5000,"mtime":1646504962532,"results":"28","hashOfConfig":"26"},{"size":2273,"mtime":1646505540862,"results":"29","hashOfConfig":"26"},{"size":2601,"mtime":1646194918790,"results":"30","hashOfConfig":"26"},{"size":3381,"mtime":1646505014135,"results":"31","hashOfConfig":"26"},{"size":2718,"mtime":1646505270057,"results":"32","hashOfConfig":"26"},{"size":1283,"mtime":1646194918792,"results":"33","hashOfConfig":"26"},{"size":1449,"mtime":1646194918792,"results":"34","hashOfConfig":"26"},{"size":823,"mtime":1646194918792,"results":"35","hashOfConfig":"26"},{"size":1320,"mtime":1646365260492,"results":"36","hashOfConfig":"26"},{"size":295,"mtime":1646200357624,"results":"37","hashOfConfig":"26"},{"size":278,"mtime":1646194918791,"results":"38","hashOfConfig":"39"},{"size":1227,"mtime":1646510820861,"results":"40","hashOfConfig":"39"},{"size":5000,"mtime":1646504962532,"results":"41","hashOfConfig":"39"},{"size":2220,"mtime":1646528566776,"results":"42","hashOfConfig":"39"},{"size":2601,"mtime":1646194918790,"results":"43","hashOfConfig":"39"},{"size":3367,"mtime":1646527922437,"results":"44","hashOfConfig":"39"},{"size":2709,"mtime":1646526363986,"results":"45","hashOfConfig":"39"},{"size":823,"mtime":1646194918792,"results":"46","hashOfConfig":"39"},{"size":1449,"mtime":1646194918792,"results":"47","hashOfConfig":"39"},{"size":1320,"mtime":1646365260492,"results":"48","hashOfConfig":"39"},{"size":1283,"mtime":1646194918792,"results":"49","hashOfConfig":"39"},{"size":295,"mtime":1646200357624,"results":"50","hashOfConfig":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ujifyr",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2u35cq",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\index.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\App.js",["127"],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\pages\\SearchBooks.js",["128","129","130"],[],"import React, { useState, useEffect } from 'react';\r\nimport {useMutation} from \"@apollo/client\"\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\nimport { saveBook, searchGoogleBooks } from '../utils/API';\r\nimport { SAVE_BOOK } from '../utils/mutations';\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  const [saveBook, {err}] = useMutation(SAVE_BOOK)\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n \r\n    try {\r\n      const response = await fetch(`http://www.googleapis.com/books/v1/volumen?q=${searchInput}`)\r\n      if (!response.ok) {\r\n        throw new Error('search error occured');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || ['No author to display'],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBook(bookToSave, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      \r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\pages\\SavedBooks.js",["131","132","133","134"],[],"import { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { removeBookId } from '../utils/localStorage';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { REMOVE_BOOK} from '../utils/mutations';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport React from 'react';\r\n\r\n\r\nconst SavedBooks = () => {\r\n\r\n  const userData = data?.me || {};\r\n  const {loading, data} = useQuery(QUERY_ME);\r\n  const [removeBook, {err}] = useMutation(REMOVE_BOOK);\r\n\r\n  console.log(userData);\r\n\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const {data} = await removeBook({\r\n        variables: { bookId }\r\n      });\r\n        removeBookId(bookId);\r\n    } catch (err) {\r\n        console.error(err);\r\n      }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userData.length) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\SignupForm.js",["135","136"],[],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER} from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const [addUser,{error, data}] = useMutation(ADD_USER);\r\n \r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: {...userFormData}\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n     \r\n    } catch (error) {\r\n        console.error(error);\r\n        setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\components\\LoginForm.js",["137"],[],"// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, {error}] = useMutation(LOGIN_USER)\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: {...userFormData}\r\n      });\r\n\r\n      console.log(data)\r\n      Auth.login(data.login.token);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\auth.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\API.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\react test\\book-search-engine\\client\\src\\utils\\queries.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\index.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\App.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\pages\\SearchBooks.js",["138","139","140"],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\pages\\SavedBooks.js",["141"],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\SignupForm.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\components\\LoginForm.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\API.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\auth.js",[],[],"C:\\Users\\samva\\OneDrive\\Desktop\\school\\challenges\\book-search-engine\\client\\src\\utils\\queries.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":19},{"ruleId":"142","severity":1,"message":"146","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":6,"column":20,"nodeType":"144","messageId":"145","endLine":6,"endColumn":37},{"ruleId":"142","severity":1,"message":"148","line":18,"column":21,"nodeType":"144","messageId":"145","endLine":18,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":12,"column":20,"nodeType":"144","messageId":"151","endLine":12,"endColumn":24},{"ruleId":"142","severity":1,"message":"152","line":13,"column":10,"nodeType":"144","messageId":"145","endLine":13,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":14,"column":23,"nodeType":"144","messageId":"145","endLine":14,"endColumn":26},{"ruleId":"142","severity":1,"message":"153","line":26,"column":14,"nodeType":"144","messageId":"145","endLine":26,"endColumn":18},{"ruleId":"142","severity":1,"message":"154","line":20,"column":19,"nodeType":"144","messageId":"145","endLine":20,"endColumn":24},{"ruleId":"142","severity":1,"message":"153","line":20,"column":26,"nodeType":"144","messageId":"145","endLine":20,"endColumn":30},{"ruleId":"142","severity":1,"message":"154","line":12,"column":18,"nodeType":"144","messageId":"145","endLine":12,"endColumn":23},{"ruleId":"142","severity":1,"message":"146","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":6,"column":20,"nodeType":"144","messageId":"145","endLine":6,"endColumn":37},{"ruleId":"142","severity":1,"message":"148","line":18,"column":21,"nodeType":"144","messageId":"145","endLine":18,"endColumn":24},{"ruleId":"142","severity":1,"message":"153","line":26,"column":14,"nodeType":"144","messageId":"145","endLine":26,"endColumn":18},"no-unused-vars","'SearchBooks' is defined but never used.","Identifier","unusedVar","'saveBook' is defined but never used.","'searchGoogleBooks' is defined but never used.","'err' is assigned a value but never used.","no-use-before-define","'data' was used before it was defined.","usedBeforeDefined","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used."]