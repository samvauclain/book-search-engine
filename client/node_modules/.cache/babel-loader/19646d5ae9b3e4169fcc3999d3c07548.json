{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\samva\\\\OneDrive\\\\Desktop\\\\react test\\\\book-search-engine\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import Auth from'../utils/auth';import{removeBookId}from'../utils/localStorage';import{useQuery,useMutation}from'@apollo/client';import{REMOVE_BOOK}from'../utils/mutations';import{QUERY_ME}from'../utils/queries';import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedBooks=function SavedBooks(){var userData=(data===null||data===void 0?void 0:data.me)||{};var _useQuery=useQuery(QUERY_ME),loading=_useQuery.loading,data=_useQuery.data;var _useMutation=useMutation(REMOVE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),removeBook=_useMutation2[0],err=_useMutation2[1].err;console.log(userData);var handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token,_yield$removeBook,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return removeBook({variables:{bookId:bookId}});case 6:_yield$removeBook=_context.sent;_data=_yield$removeBook.data;removeBookId(bookId);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[3,11]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(!userData.length){return/*#__PURE__*/_jsx(\"h2\",{children:\"LOADING...\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Viewing saved books!\"})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'}),/*#__PURE__*/_jsx(CardColumns,{children:userData.savedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);},children:\"Delete this Book!\"})]})]},book.bookId);})})]})]});};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/src/pages/SavedBooks.js"],"names":["Jumbotron","Container","CardColumns","Card","Button","Auth","removeBookId","useQuery","useMutation","REMOVE_BOOK","QUERY_ME","React","SavedBooks","userData","data","me","loading","removeBook","err","console","log","handleDeleteBook","bookId","token","loggedIn","getToken","variables","error","length","savedBooks","map","book","image","title","authors","description"],"mappings":"6dAAA,OAASA,SAAT,CAAoBC,SAApB,CAA+BC,WAA/B,CAA4CC,IAA5C,CAAkDC,MAAlD,KAAgE,iBAAhE,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,OAASC,YAAT,KAA6B,uBAA7B,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,gBAAtC,CACA,OAASC,WAAT,KAA2B,oBAA3B,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,6IAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAEvB,GAAMC,CAAAA,QAAQ,CAAG,CAAAC,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEC,EAAN,GAAY,EAA7B,CACA,cAAwBR,QAAQ,CAACG,QAAD,CAAhC,CAAOM,OAAP,WAAOA,OAAP,CAAgBF,IAAhB,WAAgBA,IAAhB,CACA,iBAA4BN,WAAW,CAACC,WAAD,CAAvC,8CAAOQ,UAAP,kBAAoBC,GAApB,kBAAoBA,GAApB,CAEAC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAEA,GAAMQ,CAAAA,gBAAgB,0FAAG,iBAAOC,MAAP,oJACjBC,KADiB,CACTlB,IAAI,CAACmB,QAAL,GAAkBnB,IAAI,CAACoB,QAAL,EAAlB,CAAoC,IAD3B,IAGlBF,KAHkB,yDAId,KAJc,+CAQAN,CAAAA,UAAU,CAAC,CAC9BS,SAAS,CAAE,CAAEJ,MAAM,CAANA,MAAF,CADmB,CAAD,CARV,wCAQdR,KARc,mBAQdA,IARc,CAWnBR,YAAY,CAACgB,MAAD,CAAZ,CAXmB,iFAanBH,OAAO,CAACQ,KAAR,cAbmB,qEAAH,kBAAhBN,CAAAA,gBAAgB,4CAAtB,CAiBA;AACA,GAAI,CAACR,QAAQ,CAACe,MAAd,CAAsB,CACpB,mBAAO,kCAAP,CACD,CAED,mBACE,wCACE,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,oBAA3B,uBACE,KAAC,SAAD,wBACE,4CADF,EADF,EADF,cAME,MAAC,SAAD,yBACE,oBACGf,QAAQ,CAACgB,UAAT,CAAoBD,MAApB,mBACcf,QAAQ,CAACgB,UAAT,CAAoBD,MADlC,mBACkDf,QAAQ,CAACgB,UAAT,CAAoBD,MAApB,GAA+B,CAA/B,CAAmC,MAAnC,CAA4C,OAD9F,MAEG,0BAHN,EADF,cAME,KAAC,WAAD,WACGf,QAAQ,CAACgB,UAAT,CAAoBC,GAApB,CAAwB,SAACC,IAAD,CAAU,CACjC,mBACE,MAAC,IAAD,EAAwB,MAAM,CAAC,MAA/B,WACGA,IAAI,CAACC,KAAL,cAAa,KAAC,IAAD,CAAM,GAAN,EAAU,GAAG,CAAED,IAAI,CAACC,KAApB,CAA2B,GAAG,yBAAmBD,IAAI,CAACE,KAAxB,CAA9B,CAA+D,OAAO,CAAC,KAAvE,EAAb,CAA+F,IADlG,cAEE,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,CAAM,KAAN,WAAaF,IAAI,CAACE,KAAlB,EADF,cAEE,WAAG,SAAS,CAAC,OAAb,uBAA+BF,IAAI,CAACG,OAApC,GAFF,cAGE,KAAC,IAAD,CAAM,IAAN,WAAYH,IAAI,CAACI,WAAjB,EAHF,cAIE,KAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAE,yBAAMd,CAAAA,gBAAgB,CAACU,IAAI,CAACT,MAAN,CAAtB,EAAlD,+BAJF,GAFF,GAAWS,IAAI,CAACT,MAAhB,CADF,CAaD,CAdA,CADH,EANF,GANF,GADF,CAiCD,CA/DD,CAiEA,cAAeV,CAAAA,UAAf","sourcesContent":["import { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { removeBookId } from '../utils/localStorage';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { REMOVE_BOOK} from '../utils/mutations';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport React from 'react';\r\n\r\n\r\nconst SavedBooks = () => {\r\n\r\n  const userData = data?.me || {};\r\n  const {loading, data} = useQuery(QUERY_ME);\r\n  const [removeBook, {err}] = useMutation(REMOVE_BOOK);\r\n\r\n  console.log(userData);\r\n\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const {data} = await removeBook({\r\n        variables: { bookId }\r\n      });\r\n        removeBookId(bookId);\r\n    } catch (err) {\r\n        console.error(err);\r\n      }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userData.length) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;"]},"metadata":{},"sourceType":"module"}