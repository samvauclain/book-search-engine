{"ast":null,"code":"import _toConsumableArray from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\samva\\\\OneDrive\\\\Desktop\\\\react test\\\\book-search-engine\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useMutation}from\"@apollo/client\";import{Jumbotron,Container,Col,Form,Button,Card,CardColumns}from'react-bootstrap';import Auth from'../utils/auth';import{saveBookIds,getSavedBookIds}from'../utils/localStorage';import{saveBook,searchGoogleBooks}from'../utils/API';import{SAVE_BOOK}from'../utils/mutations';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SearchBooks=function SearchBooks(){// create state for holding returned google api data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchedBooks=_useState2[0],setSearchedBooks=_useState2[1];// create state for holding our search field data\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchInput=_useState4[0],setSearchInput=_useState4[1];// create state to hold saved bookId values\nvar _useState5=useState(getSavedBookIds()),_useState6=_slicedToArray(_useState5,2),savedBookIds=_useState6[0],setSavedBookIds=_useState6[1];var _useMutation=useMutation(SAVE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),saveBook=_useMutation2[0],err=_useMutation2[1].err;// set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n// learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\nuseEffect(function(){return function(){return saveBookIds(savedBookIds);};});// create method to search for books and set state on form submit\nvar handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,_yield$response$json,items,bookData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(searchInput){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return fetch(\"http://www.googleapis.com/books/v1/volumen?q=\".concat(searchInput));case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error('search error occured');case 9:_context.next=11;return response.json();case 11:_yield$response$json=_context.sent;items=_yield$response$json.items;bookData=items.map(function(book){var _book$volumeInfo$imag;return{bookId:book.id,authors:book.volumeInfo.authors||['No author to display'],title:book.volumeInfo.title,description:book.volumeInfo.description,image:((_book$volumeInfo$imag=book.volumeInfo.imageLinks)===null||_book$volumeInfo$imag===void 0?void 0:_book$volumeInfo$imag.thumbnail)||''};});setSearchedBooks(bookData);setSearchInput('');_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 21:case\"end\":return _context.stop();}}},_callee,null,[[3,18]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();// create function to handle saving a book to our database\nvar handleSaveBook=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookId){var bookToSave,token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// find the book in `searchedBooks` state by the matching id\nbookToSave=searchedBooks.find(function(book){return book.bookId===bookId;});// get token\ntoken=Auth.loggedIn()?Auth.getToken():null;if(token){_context2.next=4;break;}return _context2.abrupt(\"return\",false);case 4:_context2.prev=4;_context2.next=7;return saveBook(bookToSave,token);case 7:response=_context2.sent;if(response.ok){_context2.next=10;break;}throw new Error('something went wrong!');case 10:// if book successfully saves to user's account, save book id to state\nsetSavedBookIds([].concat(_toConsumableArray(savedBookIds),[bookToSave.bookId]));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](4);console.error(_context2.t0);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[4,13]]);}));return function handleSaveBook(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Search for Books!\"}),/*#__PURE__*/_jsx(Form,{onSubmit:handleFormSubmit,children:/*#__PURE__*/_jsxs(Form.Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,md:8,children:/*#__PURE__*/_jsx(Form.Control,{name:\"searchInput\",value:searchInput,onChange:function onChange(e){return setSearchInput(e.target.value);},type:\"text\",size:\"lg\",placeholder:\"Search for a book\"})}),/*#__PURE__*/_jsx(Col,{xs:12,md:4,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"success\",size:\"lg\",children:\"Submit Search\"})})]})})]})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:searchedBooks.length?\"Viewing \".concat(searchedBooks.length,\" results:\"):'Search for a book to begin'}),/*#__PURE__*/_jsx(CardColumns,{children:searchedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),Auth.loggedIn()&&/*#__PURE__*/_jsx(Button,{disabled:savedBookIds===null||savedBookIds===void 0?void 0:savedBookIds.some(function(savedBookId){return savedBookId===book.bookId;}),className:\"btn-block btn-info\",onClick:function onClick(){return handleSaveBook(book.bookId);},children:savedBookIds!==null&&savedBookIds!==void 0&&savedBookIds.some(function(savedBookId){return savedBookId===book.bookId;})?'This book has already been saved!':'Save this Book!'})]})]},book.bookId);})})]})]});};export default SearchBooks;","map":{"version":3,"sources":["C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/src/pages/SearchBooks.js"],"names":["React","useState","useEffect","useMutation","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBookIds","getSavedBookIds","saveBook","searchGoogleBooks","SAVE_BOOK","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","err","handleFormSubmit","event","preventDefault","fetch","response","ok","Error","json","items","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","error","handleSaveBook","bookToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBookId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {useMutation} from \"@apollo/client\"\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\r\nimport { saveBook, searchGoogleBooks } from '../utils/API';\r\nimport { SAVE_BOOK } from '../utils/mutations';\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  const [saveBook, {err}] = useMutation(SAVE_BOOK)\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n \r\n    try {\r\n      const response = await fetch(`http://www.googleapis.com/books/v1/volumen?q=${searchInput}`)\r\n      if (!response.ok) {\r\n        throw new Error('search error occured');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || ['No author to display'],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBook(bookToSave, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      \r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a book'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : 'Search for a book to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border='dark'>\r\n                {book.image ? (\r\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className='small'>Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBook(book.bookId)}>\r\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\r\n                        ? 'This book has already been saved!'\r\n                        : 'Save this Book!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n"]},"metadata":{},"sourceType":"module"}