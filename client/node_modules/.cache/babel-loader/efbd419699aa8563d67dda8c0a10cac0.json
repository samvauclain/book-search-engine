{"ast":null,"code":"import _classCallCheck from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";// use this to decode a token and get the user's information out of it\nimport decode from'jwt-decode';// create a new class to instantiate for a user\nvar AuthService=/*#__PURE__*/function(){function AuthService(){_classCallCheck(this,AuthService);}_createClass(AuthService,[{key:\"getProfile\",value:// get user data\nfunction getProfile(){return decode(this.getToken());}// check if user's logged in\n},{key:\"loggedIn\",value:function loggedIn(){// Checks if there is a saved token and it's still valid\nvar token=this.getToken();return!!token&&!this.isTokenExpired(token);// handwaiving here\n}// check if token is expired\n},{key:\"isTokenExpired\",value:function isTokenExpired(token){try{var decoded=decode(token);if(decoded.exp<Date.now()/1000){return true;}else return false;}catch(err){return false;}}},{key:\"getToken\",value:function getToken(){// Retrieves the user token from localStorage\nreturn localStorage.getItem('id_token');}},{key:\"login\",value:function login(idToken){// Saves user token to localStorage\nlocalStorage.setItem('id_token',idToken);window.location.assign('/');}},{key:\"logout\",value:function logout(){// Clear user token and profile data from localStorage\nlocalStorage.removeItem('id_token');// this will reload the page and reset the state of the application\nwindow.location.assign('/');}}]);return AuthService;}();export default new AuthService();","map":{"version":3,"sources":["C:/Users/samva/OneDrive/Desktop/react test/book-search-engine/client/src/utils/auth.js"],"names":["decode","AuthService","getToken","token","isTokenExpired","decoded","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem"],"mappings":"kTAAA;AACA,MAAOA,CAAAA,MAAP,KAAmB,YAAnB,CAEA;GACMC,CAAAA,W,qIACJ;AACA,qBAAa,CACX,MAAOD,CAAAA,MAAM,CAAC,KAAKE,QAAL,EAAD,CAAb,CACD,CAED;wBACA,mBAAW,CACT;AACA,GAAMC,CAAAA,KAAK,CAAG,KAAKD,QAAL,EAAd,CACA,MAAO,CAAC,CAACC,KAAF,EAAW,CAAC,KAAKC,cAAL,CAAoBD,KAApB,CAAnB,CAA+C;AAChD,CAED;8BACA,wBAAeA,KAAf,CAAsB,CACpB,GAAI,CACF,GAAME,CAAAA,OAAO,CAAGL,MAAM,CAACG,KAAD,CAAtB,CACA,GAAIE,OAAO,CAACC,GAAR,CAAcC,IAAI,CAACC,GAAL,GAAa,IAA/B,CAAqC,CACnC,MAAO,KAAP,CACD,CAFD,IAEO,OAAO,MAAP,CACR,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAO,MAAP,CACD,CACF,C,wBAED,mBAAW,CACT;AACA,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAP,CACD,C,qBAED,eAAMC,OAAN,CAAe,CACb;AACAF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAiCD,OAAjC,EACAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB,EACD,C,sBAED,iBAAS,CACP;AACAN,YAAY,CAACO,UAAb,CAAwB,UAAxB,EACA;AACAH,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB,EACD,C,2BAGH,cAAe,IAAIf,CAAAA,WAAJ,EAAf","sourcesContent":["// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}